{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth'; //import { rejects } from 'assert';\n\nconst config = {\n  apiKey: \"AIzaSyBH_7FP31L5vwAyQrHRGWFcKK0S_Wikm_g\",\n  authDomain: \"crown-db-bef58.firebaseapp.com\",\n  databaseURL: \"https://crown-db-bef58.firebaseio.com\",\n  projectId: \"crown-db-bef58\",\n  storageBucket: \"crown-db-bef58.appspot.com\",\n  messagingSenderId: \"36833151942\",\n  appId: \"1:36833151942:web:40a7bdc1b0f07229c080c7\",\n  measurementId: \"G-JB3KLLL9WM\"\n};\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`); //const collectionRef = firestore.collection('users');\n\n  const snapShot = await userRef.get(); //const collectionSnapshot = await collectionRef.get();\n  //console.log({collection: collectionSnapshot.docs.map(doc=> doc.data())});\n  //   console.log(snapShot);\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log('error creating user ', error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionRef.doc();\n    console.log(newDocRef);\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  }); //console.log(transformedCollection);\n\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n}; //firebase.initializeApp(config);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase; //   export default createUserProfileDocument();","map":{"version":3,"sources":["C:/Users/naeem/Desktop/css/react js/crown-clothing/client/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","accumulator","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app' ;\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n//import { rejects } from 'assert';\r\n\r\nconst config = {\r\n\r\n    \r\n        apiKey: \"AIzaSyBH_7FP31L5vwAyQrHRGWFcKK0S_Wikm_g\",\r\n        authDomain: \"crown-db-bef58.firebaseapp.com\",\r\n        databaseURL: \"https://crown-db-bef58.firebaseio.com\",\r\n        projectId: \"crown-db-bef58\",\r\n        storageBucket: \"crown-db-bef58.appspot.com\",\r\n        messagingSenderId: \"36833151942\",\r\n        appId: \"1:36833151942:web:40a7bdc1b0f07229c080c7\",\r\n        measurementId: \"G-JB3KLLL9WM\"\r\n      };\r\n\r\n      firebase.initializeApp(config);\r\n\r\n      export const createUserProfileDocument = async (userAuth , additionalData) =>\r\n      {\r\n          if (!userAuth) return ;\r\n\r\n          const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n          //const collectionRef = firestore.collection('users');\r\n\r\n          const snapShot = await userRef.get();\r\n          //const collectionSnapshot = await collectionRef.get();\r\n          //console.log({collection: collectionSnapshot.docs.map(doc=> doc.data())});\r\n\r\n        //   console.log(snapShot);\r\n\r\n          if(!snapShot.exists)\r\n          {\r\n              const {displayName , email} = userAuth;\r\n              const createdAt = new Date();\r\n          \r\n\r\n          try{\r\n              await userRef.set({\r\n                  displayName,email,createdAt, ...additionalData\r\n              })\r\n\r\n          }catch (error) {\r\n\r\n            console.log('error creating user ' , error.message);\r\n          }\r\n        }\r\n\r\n        return userRef;\r\n      };\r\n\r\n       export const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\r\n         const collectionRef = firestore.collection(collectionKey);\r\n         console.log(collectionRef);\r\n         const batch = firestore.batch();\r\n         objectsToAdd.forEach(obj => {\r\n           const newDocRef = collectionRef.doc();\r\n           console.log(newDocRef);\r\n\r\n          batch.set(newDocRef,obj);\r\n\r\n         });\r\n\r\n         return await batch.commit();\r\n       };\r\n\r\n      export const convertCollectionsSnapshotToMap = (collections) => {\r\n         const transformedCollection = collections.docs.map(doc => {\r\n           const {title , items} = doc.data();\r\n\r\n           return {\r\n             routeName: encodeURI (title.toLowerCase()),\r\n             id: doc.id,\r\n             title,\r\n             items\r\n           };\r\n         });\r\n         //console.log(transformedCollection);\r\n\r\n         return transformedCollection.reduce((accumulator, collection) => {\r\n          accumulator[collection.title.toLowerCase()] = collection;\r\n          return accumulator;\r\n        }, {});\r\n      };\r\n\r\n       export const getCurrentUser = () => {\r\n        return new Promise((resolve, reject) => {\r\n          const unsubscribe = auth.onAuthStateChanged(userAuth => {\r\n            unsubscribe();\r\n            resolve(userAuth);\r\n          }, reject);\r\n        });\r\n      };\r\n\r\n      //firebase.initializeApp(config);\r\n      export const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\r\ngoogleProvider.setCustomParameters({ prompt: 'select_account' });\r\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\r\n\r\nexport default firebase;\r\n\r\n\r\n    //   export default createUserProfileDocument();"]},"metadata":{},"sourceType":"module"}