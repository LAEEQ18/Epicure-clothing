{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\naeem\\\\Desktop\\\\css\\\\react js\\\\crown-clothing\\\\client\\\\src\\\\Components\\\\sign-in\\\\sign-in.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component'; //import {auth } from '../../firebase/firebase.utils';\n\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from './sign-in.style.jsx'; //class SignIn extends React.Component {\n// constructor(props) {\n//     super (props);\n//     this.state = {\n//         email : '',\n//         password : ''\n//     }\n// }\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  }; //const {email, password} =this.state;\n  // try{\n  //     await auth.signInWithEmailAndPassword(email,password)\n  //     this.setState({email:'',password:''});\n  // }catch(error){\n  //     console.log(error);\n  // }\n  // };\n\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  }; // render() {\n  //     const { googleSignInStart} = this.props;\n  // const {emailSignInStart} = this.props;\n\n\n  return /*#__PURE__*/React.createElement(SignInContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SignInTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \" I already have an account \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \" Sign In with your email and Password \"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    handleChange: handleChange,\n    value: email,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(ButtonsBarContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \" SIGN IN \"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \" \", '', \" SIGN IN With Google \", '', \" \"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/naeem/Desktop/css/react js/crown-clothing/client/src/Components/sign-in/sign-in.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignInContainer","SignInTitle","ButtonsBarContainer","SignIn","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\n//import {auth } from '../../firebase/firebase.utils';\r\nimport { googleSignInStart , emailSignInStart} from '../../redux/user/user.actions';\r\n\r\nimport {\r\n    SignInContainer,\r\n    SignInTitle,\r\n    ButtonsBarContainer\r\n} from './sign-in.style.jsx'\r\n\r\n//class SignIn extends React.Component {\r\n    // constructor(props) {\r\n    //     super (props);\r\n\r\n    //     this.state = {\r\n    //         email : '',\r\n    //         password : ''\r\n    //     }\r\n    // }\r\n    const SignIn = ({ emailSignInStart, googleSignInStart }) => {\r\n        const [userCredentials, setCredentials] = useState({\r\n          email: '',\r\n          password: ''\r\n        });\r\n      \r\n        const { email, password } = userCredentials;\r\n      \r\n        const handleSubmit = async event => {\r\n          event.preventDefault();\r\n      \r\n          emailSignInStart(email, password);\r\n        };\r\n      \r\n\r\n        //const {email, password} =this.state;\r\n\r\n        // try{\r\n        //     await auth.signInWithEmailAndPassword(email,password)\r\n        //     this.setState({email:'',password:''});\r\n        // }catch(error){\r\n        //     console.log(error);\r\n        // }\r\n   // };\r\n\r\n   const handleChange = event => {\r\n    const { value, name } = event.target;\r\n\r\n    setCredentials({ ...userCredentials, [name]: value });\r\n  };\r\n\r\n    // render() {\r\n    //     const { googleSignInStart} = this.props;\r\n       // const {emailSignInStart} = this.props;\r\n        return(\r\n            <SignInContainer>\r\n                <SignInTitle> I already have an account </SignInTitle>\r\n                <span> Sign In with your email and Password </span>\r\n                <form onSubmit ={handleSubmit}>\r\n\r\n                    <FormInput name ='email' type ='email'  handleChange={handleChange} value ={email} label='Email' required/>\r\n                    \r\n                    <FormInput name ='password' type ='password' value ={password} handleChange={handleChange} label='Password' required/>\r\n                    {/* <label>Password</label> */}\r\n\r\n                    <ButtonsBarContainer>\r\n                        \r\n        <CustomButton type = 'submit'   > SIGN IN </CustomButton>\r\n\r\n                    <CustomButton type = 'button' onClick = {googleSignInStart} isGoogleSignIn > {''} SIGN IN With Google {''} </CustomButton>\r\n\r\n                    </ButtonsBarContainer>\r\n                   \r\n                </form>\r\n            </SignInContainer>\r\n        )\r\n    }\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password) =>\r\n    dispatch(emailSignInStart({ email, password }))\r\n});\r\n\r\nexport default connect (null , mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}