{"ast":null,"code":"import ShopActionTypes from './shope.type';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'; //import { error } from 'coll';\n// export const updateCollections = collectionsMap => ({\n//     type: ShopActionTypes.UPDATE_COLLECTIONS,\n//     payload: collectionsMap\n// })\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FECTCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FECTCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FECTCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapShot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapShot);\n      dispatch(fetchCollectionsSuccess(collectionsMap)); //this.setState({loading :false});\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["C:/Users/naeem/Desktop/css/react js/crown-clothing/client/src/redux/shop/shop.action.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FECTCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FECTCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FECTCH_COLLECTIONS_FAILURE","fetchCollectionsStartAync","dispatch","collectionRef","collection","get","then","snapShot","catch","error","message"],"mappings":"AAAA,OAAQA,eAAR,MAA8B,cAA9B;AAEA,SAAQC,SAAR,EAAoBC,+BAApB,QAA0D,+BAA1D,C,CACA;AAGA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADkB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGC,cAAc,KAAK;AACtDH,EAAAA,IAAI,EAAEJ,eAAe,CAACQ,0BADgC;AAEtDC,EAAAA,OAAO,EAAEF;AAF6C,CAAL,CAA9C;AAKP,OAAO,MAAMG,uBAAuB,GAAGC,YAAY,KAAK;AACpDP,EAAAA,IAAI,EAAEJ,eAAe,CAACY,0BAD8B;AAEpDH,EAAAA,OAAO,EAAEE;AAF2C,CAAL,CAA5C;AAOP,OAAO,MAAME,yBAAyB,GAAG,MAAM;AAC3C,SAAOC,QAAQ,IAAI;AAEf,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CACIC,QAAQ,IAAI;AAER,YAAMZ,cAAc,GAAKL,+BAA+B,CAACiB,QAAD,CAAxD;AACDL,MAAAA,QAAQ,CAAER,uBAAuB,CAACC,cAAD,CAAzB,CAAR,CAHS,CAIR;AAEA,KAPR,EAQEa,KARF,CAQQC,KAAK,IAAIP,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CARzB;AAUH,GAfD;AAgBH,CAjBM","sourcesContent":["import  ShopActionTypes  from './shope.type';\r\n\r\nimport {firestore , convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\r\n//import { error } from 'coll';\r\n\r\n\r\n// export const updateCollections = collectionsMap => ({\r\n//     type: ShopActionTypes.UPDATE_COLLECTIONS,\r\n//     payload: collectionsMap\r\n// })\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n    type: ShopActionTypes.FECTCH_COLLECTIONS_START,\r\n});\r\n\r\nexport const fetchCollectionsSuccess = collectionsMap => ({\r\n    type: ShopActionTypes.FECTCH_COLLECTIONS_SUCCESS,\r\n    payload: collectionsMap\r\n})\r\n\r\nexport const fetchCollectionsFailure = errorMessage => ({\r\n    type: ShopActionTypes.FECTCH_COLLECTIONS_FAILURE,\r\n    payload: errorMessage\r\n})\r\n\r\n\r\n\r\nexport const fetchCollectionsStartAync = () => {\r\n    return dispatch => {\r\n\r\n        const collectionRef = firestore.collection('collections');\r\n        dispatch(fetchCollectionsStart());\r\n\r\n        collectionRef.get().then(\r\n            snapShot => {\r\n\r\n                const collectionsMap =   convertCollectionsSnapshotToMap(snapShot);\r\n               dispatch (fetchCollectionsSuccess(collectionsMap));\r\n                //this.setState({loading :false});\r\n               \r\n               }\r\n        ).catch(error => dispatch(fetchCollectionsFailure(error.message)));\r\n\r\n    } \r\n}"]},"metadata":{},"sourceType":"module"}