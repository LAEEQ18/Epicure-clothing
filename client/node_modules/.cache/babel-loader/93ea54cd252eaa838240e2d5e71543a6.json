{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist'; //import {persistReducer} from 'redux-persist';\n\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga'; //import thunk from 'redux-thunk';\n//import { fetchCollectionsStart} from './shop/shop.sagas';\n\nimport rootSaga from '../redux/root-saga';\nimport rootReducer from './root-reducer';\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n}; //export default persistor;","map":{"version":3,"sources":["C:/Users/naeem/Desktop/css/react js/crown-clothing/client/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","createSagaMiddleware","rootSaga","rootReducer","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAAQA,WAAR,EAAsBC,eAAtB,QAA4C,OAA5C;AACA,SAAQC,YAAR,QAA2B,eAA3B,C,CACA;;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,oBAAP,MAAiC,YAAjC,C,CACA;AAEA;;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AAEA,MAAMI,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EACA;AACIH,EAAAA,WAAW,CAACI,IAAZ,CAAiBT,MAAjB;AACH;;AAEA,OAAO,MAAMU,KAAK,GAAGb,WAAW,CAACM,WAAD,EAAaL,eAAe,CAAC,GAAGO,WAAJ,CAA5B,CAAzB;AAEPD,cAAc,CAACO,GAAf,CAAoBT,QAApB;AACA,OAAO,MAAMU,SAAS,GAAGb,YAAY,CAACW,KAAD,CAA9B;AAGR,eAAe;AAACA,EAAAA,KAAD;AAASE,EAAAA;AAAT,CAAf,C,CACA","sourcesContent":["import {createStore , applyMiddleware} from 'redux';\r\nimport {persistStore} from 'redux-persist';\r\n//import {persistReducer} from 'redux-persist';\r\n\r\nimport logger from 'redux-logger';\r\nimport createSagaMiddleware from 'redux-saga';\r\n//import thunk from 'redux-thunk';\r\n\r\n//import { fetchCollectionsStart} from './shop/shop.sagas';\r\nimport rootSaga from '../redux/root-saga';\r\nimport rootReducer from './root-reducer';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nif (process.env.NODE_ENV === 'development')\r\n{\r\n    middlewares.push(logger);\r\n}\r\n\r\n export const store = createStore(rootReducer,applyMiddleware(...middlewares));\r\n\r\n sagaMiddleware.run (rootSaga);\r\n export const persistor = persistStore(store);\r\n\r\n\r\nexport default {store , persistor}\r\n//export default persistor;"]},"metadata":{},"sourceType":"module"}