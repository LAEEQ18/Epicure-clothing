{"ast":null,"code":"import { createSelector } from 'reselect';\nimport memoize from 'lodash.memoize';\n/*const COLLECTION_ID_MAP = {\r\n    hats : 1,\r\n    sneakers: 2,\r\n    jackets: 3,\r\n    womens: 4,\r\n    mens: 5\r\n}*/\n// we also dont need collection id map after creating object\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections); // for converting object in to array\n\nexport const selectCollectionsForPreivew = createSelector([selectCollections], collections => collections ? Object.keys(collections).map(key => collections[key]) : []);\nexport const selectCollection = memoize(collectionUrlParam => createSelector([selectCollections], // after creating an object we dont use .find an array function collections => collections.find( collection => collection.id === COLLECTION_ID_MAP[collectionUrlParam])\ncollections => collections ? collections[collectionUrlParam] : null));\nexport const selectIsCollectionFetching = createSelector([selectShop], shop => shop.isFetching);\nexport const selectIsCollectionsLaoded = createSelector([selectShop], shop => !!shop.collections);","map":{"version":3,"sources":["C:/Users/naeem/Desktop/css/react js/crown-clothing/client/src/redux/shop/shop.selector.js"],"names":["createSelector","memoize","selectShop","state","shop","selectCollections","collections","selectCollectionsForPreivew","Object","keys","map","key","selectCollection","collectionUrlParam","selectIsCollectionFetching","isFetching","selectIsCollectionsLaoded"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA;;;;;;;AAOA;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGL,cAAc,CAC3C,CAACE,UAAD,CAD2C,EAE3CE,IAAI,IAAIA,IAAI,CAACE,WAF8B,CAAxC,C,CAIP;;AACA,OAAO,MAAMC,2BAA2B,GAAGP,cAAc,CAErD,CAACK,iBAAD,CAFqD,EAIrDC,WAAW,IAAIA,WAAW,GAAGE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6BC,GAAG,IAAIL,WAAW,CAACK,GAAD,CAA/C,CAAH,GAA2D,EAJhC,CAAlD;AAQP,OAAO,MAAMC,gBAAgB,GAAGX,OAAO,CAAEY,kBAAD,IAExCb,cAAc,CACV,CAACK,iBAAD,CADU,EAEX;AACCC,WAAW,IAAKA,WAAW,GAACA,WAAW,CAACO,kBAAD,CAAZ,GAAkC,IAHnD,CAFyB,CAAhC;AASP,OAAO,MAAMC,0BAA0B,GAAGd,cAAc,CACpD,CAACE,UAAD,CADoD,EAEpDE,IAAI,IAAIA,IAAI,CAACW,UAFuC,CAAjD;AAKP,OAAO,MAAMC,yBAAyB,GAAGhB,cAAc,CACnD,CAACE,UAAD,CADmD,EAEnDE,IAAI,IAAI,CAAC,CAAEA,IAAI,CAACE,WAFmC,CAAhD","sourcesContent":["import {createSelector} from 'reselect';\r\nimport memoize from 'lodash.memoize';\r\n\r\n/*const COLLECTION_ID_MAP = {\r\n    hats : 1,\r\n    sneakers: 2,\r\n    jackets: 3,\r\n    womens: 4,\r\n    mens: 5\r\n}*/\r\n// we also dont need collection id map after creating object\r\n\r\nconst selectShop = state => state.shop;\r\n\r\nexport const selectCollections = createSelector(\r\n    [selectShop],\r\n    shop => shop.collections\r\n);\r\n// for converting object in to array\r\nexport const selectCollectionsForPreivew = createSelector(\r\n\r\n    [selectCollections] ,\r\n\r\n    collections => collections ? Object.keys(collections).map(key => collections[key]) : []\r\n\r\n);\r\n\r\nexport const selectCollection = memoize((collectionUrlParam) => \r\n\r\ncreateSelector(\r\n    [selectCollections],\r\n   // after creating an object we dont use .find an array function collections => collections.find( collection => collection.id === COLLECTION_ID_MAP[collectionUrlParam])\r\n    collections => (collections?collections[collectionUrlParam] :null)\r\n   )\r\n);\r\n\r\nexport const selectIsCollectionFetching = createSelector (\r\n    [selectShop],\r\n    shop => shop.isFetching\r\n)\r\n\r\nexport const selectIsCollectionsLaoded = createSelector (\r\n    [selectShop],\r\n    shop => !! shop.collections\r\n)"]},"metadata":{},"sourceType":"module"}