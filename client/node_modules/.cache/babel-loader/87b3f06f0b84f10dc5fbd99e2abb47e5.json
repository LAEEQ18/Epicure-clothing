{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\naeem\\\\Desktop\\\\css\\\\react js\\\\crown-clothing\\\\client\\\\src\\\\Components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component'; //import {auth , createUserProfileDocument} from '../../firebase/firebase.utils';\n\nimport { signUpStart } from '../../redux/user/user.actions';\nimport './sign-up.styles.scss';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault(); // const {signUpStart} = this.props;\n\n    const {\n      displayName,\n      email,\n      password,\n      confirmPassword\n    } = userCredentials;\n\n    if (password !== confirmPassword) {\n      alert(\"paswords don't match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handlechange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  }; // const {displayName,email,password,confirmPassword} = this.state;\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \" I do not have an Account \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, \" Sign Up with your email and password \"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handlechange,\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handlechange,\n    label: \" Email \",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handlechange,\n    label: \" Password \",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handlechange,\n    label: \"Confirm Password \",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, \" SIGN UP \")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/naeem/Desktop/css/react js/crown-clothing/client/src/Components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUp","userCredentials","setCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handlechange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport {connect} from 'react-redux'; \r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n//import {auth , createUserProfileDocument} from '../../firebase/firebase.utils';\r\n\r\nimport {signUpStart} from '../../redux/user/user.actions';\r\nimport './sign-up.styles.scss';\r\n\r\nconst SignUp = ({signUpStart}) => {\r\n    const [userCredentials , setCredentials] = useState ({\r\n        displayName : '' ,\r\n        email :'' ,\r\n        password: '',\r\n        confirmPassword:''\r\n    });\r\n    \r\n    const {displayName,email,password,confirmPassword} = userCredentials;\r\n  const handleSubmit = async event => {\r\n        event.preventDefault();\r\n       // const {signUpStart} = this.props;\r\n        const {displayName, email, password, confirmPassword} = userCredentials;\r\n\r\n        if(password !== confirmPassword)\r\n        {\r\n            alert (\"paswords don't match\" );\r\n            return;\r\n        }\r\n       \r\n        signUpStart({displayName,email,password});\r\n    };\r\n       const handlechange = event => {\r\n            const {name , value} = event.target;\r\n\r\n            setCredentials({ ...userCredentials,[name]:value});\r\n        };\r\n    \r\n\r\n    \r\n       // const {displayName,email,password,confirmPassword} = this.state;\r\n        return(\r\n            <div className = 'sign-up'>\r\n                <h2 className = 'title'> I do not have an Account </h2>\r\n                <span> Sign Up with your email and password </span>\r\n                <form className ='sign-up-form' onSubmit = {handleSubmit}>\r\n                    <FormInput\r\n                        type='text'\r\n                        name='displayName'\r\n                        value={displayName}\r\n                        onChange={handlechange}\r\n                        label='Display Name' required\r\n                    \r\n                    />\r\n\r\n                    <FormInput\r\n                        type='email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={handlechange}\r\n                        label=' Email ' required\r\n                    \r\n                    />\r\n                      <FormInput\r\n                        type='password'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={handlechange}\r\n                        label=' Password ' required\r\n                    \r\n                    />\r\n                    <FormInput\r\n                        type='password'\r\n                        name='confirmPassword'\r\n                        value={confirmPassword}\r\n                        onChange={handlechange}\r\n                        label='Confirm Password ' required\r\n                    \r\n                    />\r\n                    <CustomButton type ='submit'> SIGN UP </CustomButton>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUpStart : userCredentials => dispatch (signUpStart(userCredentials))\r\n})\r\n\r\nexport default  connect (null, mapDispatchToProps) (SignUp) ;"]},"metadata":{},"sourceType":"module"}