{"ast":null,"code":"import { call, put, takeLatest, all } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.action';\nimport ShopActionTypes from './shope.type';\nexport function* fetchCollectionsAsync() {\n  // yield console.log('I am fired');\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapShot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapShot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FECTCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)]);\n}","map":{"version":3,"sources":["C:/Users/naeem/Desktop/css/react js/crown-clothing/client/src/redux/shop/shop.sagas.js"],"names":["call","put","takeLatest","all","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","fetchCollectionsAsync","collectionRef","collection","snapShot","get","collectionsMap","error","message","fetchCollectionsStart","FECTCH_COLLECTIONS_START","shopSagas"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,EAAgCC,GAAhC,QAA0C,oBAA1C;AAEA,SAASC,SAAT,EAAqBC,+BAArB,QAA2D,+BAA3D;AAEA,SACIC,uBADJ,EAEIC,uBAFJ,QAIO,eAJP;AAMA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACtC;AAEH,MAAG;AACC,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACK,+BAAD,EAAkCO,QAAlC,CAAjC;AACA,UAAMX,GAAG,CAACK,uBAAuB,CAACQ,cAAD,CAAxB,CAAT;AACH,GALD,CAKE,OAAOC,KAAP,EAAc;AACZ,UAAMd,GAAG,CAAEM,uBAAuB,CAACQ,KAAK,CAACC,OAAP,CAAzB,CAAT;AACH;AAEA;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMf,UAAU,CACZM,eAAe,CAACU,wBADJ,EAEZT,qBAFY,CAAhB;AAIH;AAED,OAAO,UAAUU,SAAV,GAAsB;AACzB,QAAMhB,GAAG,CAAE,CAACH,IAAI,CAACiB,qBAAD,CAAL,CAAF,CAAT;AACH","sourcesContent":["import { call ,put, takeLatest ,all} from 'redux-saga/effects';\r\n\r\nimport { firestore , convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\r\n\r\nimport {\r\n    fetchCollectionsSuccess,\r\n    fetchCollectionsFailure\r\n\r\n} from './shop.action';\r\n\r\nimport ShopActionTypes from './shope.type';\r\n\r\nexport function* fetchCollectionsAsync() {\r\n   // yield console.log('I am fired');\r\n\r\ntry{\r\n    const collectionRef = firestore.collection('collections');\r\n    const snapShot = yield collectionRef.get();\r\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapShot);\r\n    yield put(fetchCollectionsSuccess(collectionsMap));\r\n} catch (error) {\r\n    yield put (fetchCollectionsFailure(error.message));\r\n}\r\n\r\n}\r\n\r\nexport function* fetchCollectionsStart() {\r\n    yield takeLatest (\r\n        ShopActionTypes.FECTCH_COLLECTIONS_START,\r\n        fetchCollectionsAsync\r\n    );\r\n}\r\n\r\nexport function* shopSagas() {\r\n    yield all( [call(fetchCollectionsStart)])\r\n}"]},"metadata":{},"sourceType":"module"}